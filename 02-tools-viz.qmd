---
execute:
  echo: true
format:
  revealjs: 
    menu: false
    transition: slide
    toc: false
    center: true
    slide-number: false
    preview-links: false
    footer: sebastiandres | https://sebastiandes.xyz
    output-file: "eng-slides"
---

## weird issue

---

## 

[Data Storytelling]{style="font-size: 1em"}

[Tools for Visualization]{style="font-size: 2em"}

:::{.notes}
Visualization is at the heart of Data Storytelling. Let's review some of the most important ones.
:::

---

## Data Exploratory tools

. . .

![](images/looker.png){width=400}

. . .

![](images/tableau.png){.absolute top=150 left=50 width=800}

. . .

![](images/pbi.png){.absolute top=200 left=100 width=800}

. . .

[Too many options! User is responsible for finding the insight]{ style="background-color: #fff"}

:::{.notes}
Tableau, PowerBI, Google’s Data? As the name suggests, they are great tools to explore. This is a previous step to telling a story.
This would be the equivalent to do the footwork of hearing people stories.
You let people find the precise combination of filter that reveal some insight. But that’s not what you need on your presentation. You need to have crafted what you WANT your audience to see.
You need...
:::

---

## Data Explanatory Tools
Too many good tools!

. . .

* Good old trustful: Matplotlib
* Mainstream: Seaborn, Plotly, Altair
* Others: plotnine, pygal, bokeh

. . . 

Pick one and master it.

:::{.notes}
I usually work with matplotlib, altair, plotly and vizzu. Give them some love. It all depends on the type of graph and time I have. You can do great things to each one of them. If you have some time, play around with Vizzu. You can do some awesome graphs, as in….
But always remember: the tools is at the service of the story you’re telling. 
:::

---

## 
::: columns
::: {.column width="50%" .fragment}
![](images/dst_before.png){fig-align="center"}
:::
::: {.column width="50%" .fragment}
![](images/dst_after.png){fig-align="center"}
:::
:::

. . .

Don't focus on the numbers. Focus on the story.

. . .

[Examples provided on Storytelling with Data, by Cole Nussbaumer Knaflic.]{style="font-size: 0.75em; color: gray"}


:::{.notes}
The next advice is to keep things simple and precisely control where you want people to look at. Do not let people search for answers. Feed the answers. Tell a story.
Vizzu’s Nolan’s example.
:::

---

## Vizzu
A Data Storytelling library for visualization

. . .

```{python}
#| code-fold: true
#| code-summary: "Show the code"

import pandas as pd
 
from ipyvizzu import Data, Config, Style
from ipyvizzustory import Story, Slide, Step
 
 
# Create data object, read csv to data frame and add data frame to data object
data = Data()
df = pd.read_csv(
    "https://ipyvizzu-story.vizzuhq.com/0.9/examples/population/population.csv",
    dtype={"Year": str},
)
data.add_df(df)
 
 
# Create story object, add data to it
story = Story(data=data)
 
# Set the size of the HTML element
# that appears within the notebook
story.set_size("100%", "400px")
 
# Switch on the tooltip that appears
# when the user hovers the mouse over a chart element
story.set_feature("tooltip", True)
 
 
# Each slide here is a page in the final interactive story
# Add the first slide
slide1 = Slide(
    Step(
        Data.filter("record.Continent == 'Africa'"),
        Config.stackedArea(
            {
                "x": "Year",
                "y": "Medium",
                "stackedBy": "Subregion",
                "title": "Population of Africa 1953-2098",
            }
        ),
        Style({"plot": {"xAxis": {"label": {"angle": 2.0}}}}),
    )
)
# Add the slide to the story
story.add_slide(slide1)
 
slide2 = Slide(
    Step(
        Config.percentageArea(
            {
                "x": "Year",
                "y": "Medium",
                "stackedBy": "Subregion",
            }
        ),
    )
)
story.add_slide(slide2)
 
slide3 = Slide(
    Step(
        Config.stream(
            {
                "x": "Year",
                "y": "Medium",
                "stackedBy": "Subregion",
            }
        ),
    )
)
story.add_slide(slide3)
 
slide4 = Slide(
    Step(
        Config.violin(
            {
                "x": "Year",
                "y": "Medium",
                "splittedBy": "Subregion",
            }
        ),
    )
)
story.add_slide(slide4)
 
 
# Play the created story!
story.play()
```